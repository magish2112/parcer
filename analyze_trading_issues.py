#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º —Å –º–∏–∫—Ä–æ—Å–¥–µ–ª–∫–∞–º–∏ –∏ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞–º–∏
"""

import pandas as pd
import numpy as np

def analyze_trading_issues():
    """–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º –≤ —Ç–æ—Ä–≥–æ–≤–æ–π –ª–æ–≥–∏–∫–µ"""
    
    # –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –æ–±—É—á–µ–Ω–∏—è
    df = pd.read_csv('adaptive_training_trades.csv')
    
    print('üîç –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú –° –ú–ò–ö–†–û–°–î–ï–õ–ö–ê–ú–ò –ò –°–¢–û–ü-–õ–û–°–°–ê–ú–ò')
    print('=' * 60)
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–æ–≤ –ø—Ä–∏–±—ã–ª–∏
    profits = df['profit']
    print(f'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–±—ã–ª–∏:')
    print(f'   - –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å: {profits.mean():.2f} USDT')
    print(f'   - –ú–µ–¥–∏–∞–Ω–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: {profits.median():.2f} USDT')
    print(f'   - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: {profits.std():.2f} USDT')
    
    # –ê–Ω–∞–ª–∏–∑ –º–∏–∫—Ä–æ—Å–¥–µ–ª–æ–∫
    micro_trades = df[abs(profits) < 10]  # –°–¥–µ–ª–∫–∏ –º–µ–Ω–µ–µ 10 USDT
    print(f'\n‚ö†Ô∏è  –ú–∏–∫—Ä–æ—Å–¥–µ–ª–∫–∏ (< 10 USDT):')
    print(f'   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(micro_trades)} ({len(micro_trades)/len(df)*100:.1f}%)')
    print(f'   - –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å: {micro_trades["profit"].mean():.2f} USDT')
    print(f'   - –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: {micro_trades["profit"].sum():.2f} USDT')
    
    # –ê–Ω–∞–ª–∏–∑ –ø–æ —Ç–∏–ø–∞–º –¥–µ–π—Å—Ç–≤–∏–π
    print(f'\nüìà –ê–Ω–∞–ª–∏–∑ –ø–æ —Ç–∏–ø–∞–º –¥–µ–π—Å—Ç–≤–∏–π:')
    action_stats = df.groupby('action')['profit'].agg(['count', 'mean', 'sum'])
    for action, stats in action_stats.iterrows():
        print(f'   {action}:')
        print(f'     - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {stats["count"]} ({stats["count"]/len(df)*100:.1f}%)')
        print(f'     - –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å: {stats["mean"]:.2f} USDT')
        print(f'     - –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: {stats["sum"]:.2f} USDT')
    
    # –ê–Ω–∞–ª–∏–∑ —á–∞—Å—Ç–æ—Ç—ã —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤
    stop_losses = df[df['action'] == 'sell_stop_loss']
    print(f'\nüõë –ê–Ω–∞–ª–∏–∑ —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤:')
    print(f'   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(stop_losses)} ({len(stop_losses)/len(df)*100:.1f}%)')
    print(f'     - –°—Ä–µ–¥–Ω–∏–π —É–±—ã—Ç–æ–∫: {stop_losses["profit"].mean():.2f} USDT')
    print(f'     - –û–±—â–∏–π —É–±—ã—Ç–æ–∫: {stop_losses["profit"].sum():.2f} USDT')
    
    # –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–π–ª–∏–Ω–≥-—Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤
    trailing_tp = df[df['action'] == 'sell_trailing_tp']
    print(f'\nüìà –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–π–ª–∏–Ω–≥-—Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤:')
    print(f'   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(trailing_tp)} ({len(trailing_tp)/len(df)*100:.1f}%)')
    print(f'     - –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å: {trailing_tp["profit"].mean():.2f} USDT')
    print(f'     - –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: {trailing_tp["profit"].sum():.2f} USDT')
    
    # –ê–Ω–∞–ª–∏–∑ —á–∞—Å—Ç–∏—á–Ω—ã—Ö —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤
    partial_tp = df[df['action'] == 'partial_tp']
    print(f'\nüí∞ –ê–Ω–∞–ª–∏–∑ —á–∞—Å—Ç–∏—á–Ω—ã—Ö —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤:')
    print(f'   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(partial_tp)} ({len(partial_tp)/len(df)*100:.1f}%)')
    if len(partial_tp) > 0:
        print(f'     - –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å: {partial_tp["profit"].mean():.2f} USDT')
        print(f'     - –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: {partial_tp["profit"].sum():.2f} USDT')
    else:
        print('     - –ß–∞—Å—Ç–∏—á–Ω—ã–µ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å')
    
    # –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∏—Å—Å–∏–π
    total_fees = abs(df['profit'] * 0.001).sum()  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–æ–º–∏—Å—Å–∏–π
    print(f'\nüí∏ –û—Ü–µ–Ω–∫–∞ –∫–æ–º–∏—Å—Å–∏–π:')
    print(f'   - –û–±—â–∏–µ –∫–æ–º–∏—Å—Å–∏–∏: ~{total_fees:.2f} USDT')
    print(f'   - –ö–æ–º–∏—Å—Å–∏–∏ –∫–∞–∫ % –æ—Ç –æ–±–æ—Ä–æ—Ç–∞: {total_fees/abs(df["profit"]).sum()*100:.2f}%')
    
    # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º
    print(f'\nüö® –í–´–Ø–í–õ–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:')
    
    # –ü—Ä–æ–±–ª–µ–º–∞ 1: –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –º–∏–∫—Ä–æ—Å–¥–µ–ª–æ–∫
    micro_ratio = len(micro_trades) / len(df)
    if micro_ratio > 0.3:
        print(f'   1. ‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –º–∏–∫—Ä–æ—Å–¥–µ–ª–æ–∫: {micro_ratio*100:.1f}%')
        print(f'      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –í–≤–µ—Å—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ –ø—Ä–∏–±—ã–ª–∏')
    
    # –ü—Ä–æ–±–ª–µ–º–∞ 2: –ß–∞—Å—Ç—ã–µ —Å—Ç–æ–ø-–ª–æ—Å—Å—ã
    sl_ratio = len(stop_losses) / len(df)
    if sl_ratio > 0.4:
        print(f'   2. ‚ùå –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ —Å—Ç–æ–ø-–ª–æ—Å—Å—ã: {sl_ratio*100:.1f}%')
        print(f'      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –£–≤–µ–ª–∏—á–∏—Ç—å trailing_stop_multiplier')
    
    # –ü—Ä–æ–±–ª–µ–º–∞ 3: –ù–∏–∑–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–µ–π–ª–∏–Ω–≥-—Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤
    if len(trailing_tp) > 0:
        tp_avg_profit = trailing_tp["profit"].mean()
        if tp_avg_profit < 20:
            print(f'   3. ‚ùå –ù–∏–∑–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–µ–π–ª–∏–Ω–≥-–¢–ü: {tp_avg_profit:.2f} USDT')
            print(f'      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –£–≤–µ–ª–∏—á–∏—Ç—å trailing_tp_trailing_pct')
    
    # –ü—Ä–æ–±–ª–µ–º–∞ 4: –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —á–∞—Å—Ç–∏—á–Ω—ã—Ö —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤
    if len(partial_tp) == 0:
        print(f'   4. ‚ùå –ß–∞—Å—Ç–∏—á–Ω—ã–µ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è')
        print(f'      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å partial_tp_pct')
    
    print(f'\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ:')
    print(f'   1. –í–≤–µ—Å—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è —á–∞—Å—Ç–∏—á–Ω—ã—Ö —Ñ–∏–∫—Å–∞—Ü–∏–π')
    print(f'   2. –î–æ–±–∞–≤–∏—Ç—å "arm"-–ø–æ—Ä–æ–≥ –¥–ª—è —Ç—Ä–µ–π–ª–∏–Ω–≥–∞ (–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–º–∏—Å—Å–∏–π)')
    print(f'   3. –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω–µ–µ "—Ç–µ—Å–Ω—ã–π" —Ç—Ä–µ–π–ª–∏–Ω–≥ –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ')
    print(f'   4. –£–≤–µ–ª–∏—á–∏—Ç—å trailing_stop_multiplier –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤')
    print(f'   5. –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤')

if __name__ == '__main__':
    analyze_trading_issues()
